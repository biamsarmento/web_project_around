(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,r(o.key),o)}}function r(t){var r=function(t){if("object"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!=e(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}var n=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popupSelector=t},r=[{key:"_handleEscClose",value:function(){var e=this;window.addEventListener("keydown",(function(t){"Escape"==t.key&&e.close()}))}},{key:"setEventListeners",value:function(){var e=this;window.addEventListener("click",(function(t){t.target!=document.querySelector(".".concat(e._popupSelector))&&t.target!=document.querySelector(".".concat(e._popupSelector,"__close-button"))||e.close()})),this._handleEscClose()}},{key:"open",value:function(){document.querySelector(".".concat(this._popupSelector)).classList.add("".concat(this._popupSelector,"_opened"))}},{key:"close",value:function(){document.querySelector(".".concat(this._popupSelector)).classList.remove("".concat(this._popupSelector,"_opened"))}}],r&&t(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,r}();function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function i(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,c(n.key),n)}}function c(e){var t=function(e){if("object"!=o(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=o(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==o(t)?t:t+""}function a(e,t,r){return t=s(t),function(e,t){if(t&&("object"==o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,u()?Reflect.construct(t,r||[],s(e).constructor):t.apply(e,r))}function u(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(u=function(){return!!e})()}function l(){return l="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},l.apply(null,arguments)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}function f(e,t){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},f(e,t)}var p=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),a(this,t,[e])}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&f(e,t)}(t,e),r=t,n=[{key:"open",value:function(e,r){var n,o,i;(n=t,o=this,i=l(s(1&3?n.prototype:n),"open",o),function(e){return i.apply(o,e)})([]),document.querySelector(".image-popup__picture").src=r,document.querySelector(".image-popup__title").textContent=e}}],n&&i(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(n);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,d(n.key),n)}}function d(e){var t=function(e){if("object"!=y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==y(t)?t:t+""}var b=function(){return e=function e(t){var r=t.baseUrl,n=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=r,this.headers=n},(t=[{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:{authorization:this.headers.authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).then((function(e){return console.log("Dados retornados pela API:",e),e}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:{authorization:this.headers.authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfile",value:function(e){var t=e.name,r=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:{authorization:this.headers.authorization,"Content-Type":this.headers["Content-Type"]},body:JSON.stringify({name:t,about:r})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"editProfilePicture",value:function(e){var t=e.linkEditProfilePic;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this.headers.authorization,"Content-Type":this.headers["Content-Type"]},body:JSON.stringify({avatar:t})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addCard",value:function(e){var t=e.name,r=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:{authorization:this.headers.authorization,"Content-Type":this.headers["Content-Type"]},body:JSON.stringify({name:t,link:r})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this.headers.authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:{authorization:this.headers.authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:{authorization:this.headers.authorization}}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}))}}])&&m(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,_(n.key),n)}}function _(e){var t=function(e){if("object"!=v(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=v(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}function S(e,t,r){return t=g(t),function(e,t){if(t&&("object"==v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,w()?Reflect.construct(t,r||[],g(e).constructor):t.apply(e,r))}function w(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(w=function(){return!!e})()}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function k(e,t){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},k(e,t)}var E=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=S(this,t,[e]))._popup=document.querySelector(".".concat(e)),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(t,e),r=t,n=[{key:"setEventListeners",value:function(e){var t=this;window.addEventListener("click",(function(e){e.target!=document.querySelector(".".concat(t._popupSelector))&&e.target!=document.querySelector(".".concat(t._popupSelector,"__close-button"))||t.close()})),window.addEventListener("keydown",(function(e){"Escape"==e.key&&t.close()})),this._popup.querySelector(".form").addEventListener("submit",(function(r){r.preventDefault();var n=new b({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-13",headers:{authorization:"4fe5fb1a-9a42-4631-9f7e-39eb49951a0f","Content-Type":"application/json"}});console.log("CardId: ",e),console.log("CardId: ",e),n.deleteCard(e).then((function(){location.reload(!0)})).catch((function(e){console.error("Erro ao obter cartões iniciais:",e)})),t.close()}))}}],n&&h(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(n);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,O(n.key),n)}}function O(e){var t=function(e){if("object"!=P(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=P(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}var L=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._numberOfLikes=Array.isArray(t.likes)?t.likes.length:0,this._isLiked=this._numberOfLikes>0},t=[{key:"_getTemplate",value:function(){return document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0)}},{key:"_setEventListeners",value:function(){var e=this,t=new b({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-13",headers:{authorization:"4fe5fb1a-9a42-4631-9f7e-39eb49951a0f","Content-Type":"application/json"}});this._element.querySelector(".card__tag-like").addEventListener("click",(function(r){r.target.classList.contains("card__tag-like_liked")?(r.target.classList.remove("card__tag-like_liked"),t.removeLike(e._id).then((function(t){console.log("ResultadoRemLikes:",t),e._likes=t.likes,e._numberOfLikes=Array.isArray(t.likes)?t.likes.length:0,console.log("Result after update: ",e._numberOfLikes),location.reload(!0)})).catch((function(e){console.error("Erro ao obter cartões iniciais:",e)}))):(r.target.classList.add("card__tag-like_liked"),t.addLike(e._id).then((function(t){console.log("ResultadoAddLikes:",t),e._likes=t.likes,e._numberOfLikes=Array.isArray(t.likes)?t.likes.length:0,console.log("Result after update: ",e._numberOfLikes),location.reload(!0)})).catch((function(e){console.error("Erro ao obter cartões iniciais:",e)})))})),this._element.querySelector(".card__image-link").addEventListener("click",(function(){e.handleCardClick()})),this._element.querySelector(".card__delete-button").addEventListener("click",(function(){var t=new E("delete-popup");t.open(),console.log("ThisId: ",e._id),t.setEventListeners(e._id)}))}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._setEventListeners(),this._element.querySelector(".card__tag-title").textContent=this._name,this._element.querySelector(".card__image").src=this._link,this._element.querySelector(".card__image").alt=this._name,this._element.querySelector(".card__tag-like-count").textContent=this._numberOfLikes,this._numberOfLikes>0?this._element.querySelector(".card__tag-like").classList.add("card__tag-like_liked"):this._element.querySelector(".card__tag-like").classList.remove("card__tag-like_liked"),this._element}},{key:"handleCardClick",value:function(){var e=new p("image-popup");e.open(this._name,this._link),e.setEventListeners()}}],t&&j(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function q(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,U(n.key),n)}}function T(e,t,r){return t&&q(e.prototype,t),r&&q(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function I(e,t,r){return(t=U(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function U(e){var t=function(e){if("object"!=C(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=C(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==C(t)?t:t+""}var z=T((function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),I(this,"_showInputError",(function(e,t){var r=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(n._config.inputErrorClass),r.textContent=t,r.classList.add(n._config.errorClass)})),I(this,"_hideInputError",(function(e){var t=n._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(n._config.inputErrorClass),t.classList.remove(n._config.errorClass),t.textContent=""})),I(this,"_checkInputValidity",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e,e.validationMessage)})),I(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),I(this,"_toggleButtonState",(function(e,t){n._hasInvalidInput(e)?t.classList.add(n._config.inactiveButtonClass):t.classList.remove(n._config.inactiveButtonClass)})),I(this,"_setEventListeners",(function(){var e=Array.from(n._formElement.querySelectorAll(n._config.inputSelector)),t=n._formElement.querySelector(n._config.submitButtonSelector);n._toggleButtonState(e,t),e.forEach((function(r){r.addEventListener("input",(function(){n._checkInputValidity(r),n._toggleButtonState(e,t)}))}))})),I(this,"enableValidation",(function(){n._formElement.addEventListener("submit",(function(e){e.preventDefault()})),n._setEventListeners()})),this._config=t,this._formElement=r}));function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function x(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,R(n.key),n)}}function R(e){var t=function(e){if("object"!=A(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==A(t)?t:t+""}function B(e,t,r){return t=N(t),function(e,t){if(t&&("object"==A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,D()?Reflect.construct(t,r||[],N(e).constructor):t.apply(e,r))}function D(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(D=function(){return!!e})()}function N(e){return N=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},N(e)}function V(e,t){return V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},V(e,t)}var H=function(e){function t(e,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=B(this,t,[e]))._handleFormSubmit=r,n._popup=document.querySelector(".".concat(e)),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&V(e,t)}(t,e),r=t,(n=[{key:"close",value:function(){"new-card-popup"==this._popupSelector&&this._popup.querySelector(".form").reset(),document.querySelector(".".concat(this._popupSelector)).classList.remove("".concat(this._popupSelector,"_opened"))}},{key:"setEventListeners",value:function(){var e=this;window.addEventListener("click",(function(t){t.target!=document.querySelector(".".concat(e._popupSelector))&&t.target!=document.querySelector(".".concat(e._popupSelector,"__close-button"))||e.close()})),window.addEventListener("keydown",(function(t){"Escape"==t.key&&e.close()})),this._popup.querySelector(".form").addEventListener("submit",(function(t){t.preventDefault(),e._popup.querySelector(".form__submit-button").textContent="Salvando...",e._handleFormSubmit(e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e=this._popup.querySelectorAll(".form__input"),t={};return e.forEach((function(e){t[e.name]=e.value})),t}}])&&x(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(n);function J(e){return J="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},J(e)}function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,F(n.key),n)}}function F(e){var t=function(e){if("object"!=J(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=J(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==J(t)?t:t+""}var G=function(){return e=function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=n,this._renderer=o,this._container=document.querySelector(r)},t=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderer",value:function(){var e=this;this.clear(),this._renderedItems.forEach((function(t){e._renderer(t)}))}}],t&&M(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function K(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,Q(n.key),n)}}function Q(e){var t=function(e){if("object"!=Y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=Y(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Y(t)?t:t+""}var W=function(){return e=function e(t){var r=t.userName,n=t.userActivity;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=document.querySelector(r),this._userActivity=document.querySelector(n)},(t=[{key:"getUserInfo",value:function(){return{name:this._userName.textContent,about:this._userActivity.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about;this._userName.textContent=t,this._userActivity.textContent=r}}])&&K(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function X(e){return X="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},X(e)}function Z(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,$(n.key),n)}}function $(e){var t=function(e){if("object"!=X(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var r=t.call(e,"string");if("object"!=X(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==X(t)?t:t+""}var ee=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profilePicLink=document.querySelector(t)},(t=[{key:"getUserProfilePic",value:function(){return this._profilePicLink.src}},{key:"setUserProfilePic",value:function(e){console.log(this._profilePicLink.src),this._profilePicLink.src=e}}])&&Z(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),te=void 0,re=document.querySelector(".content"),ne=re.querySelector(".profile__info-edit-button"),oe=(re.querySelector(".profile-popup"),re.querySelector(".profile__add-button")),ie=re.querySelector(".profile__avatar_button"),ce={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-button",inactiveButtonClass:"form__submit-button_inactive",errorClass:"form__input-error_active"};Array.from(document.querySelectorAll(".form")).forEach((function(e){new z(ce,e).enableValidation()}));var ae=new G({items:[{name:"Vale de Yosemite",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_yosemite.jpg"},{name:"Lago Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lake-louise.jpg"},{name:"Montanhas Carecas",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_latemar.jpg"},{name:"Parque Nacional da Vanoise ",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/web-code/moved_lago.jpg"}],renderer:function(e){var t=new L(e).generateCard();ae.addItem(t)}},".elements"),ue=new b({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-13",headers:{authorization:"4fe5fb1a-9a42-4631-9f7e-39eb49951a0f","Content-Type":"application/json"}});ue.getInitialCards().then((function(e){console.log("Resultados:",e),e.forEach((function(e){var t=new L(e).generateCard();ae.addItem(t)}))})).catch((function(e){console.error("Erro ao obter cartões iniciais:",e)})),ue.getUserInfo().then((function(e){document.querySelector(".profile__info-title").textContent=e.name,document.querySelector(".profile__info-activity").textContent=e.about,document.querySelector(".profile__avatar").src=e.avatar})).catch((function(e){console.error("Erro ao obter Usrr Info:",e)}));var le=new W({userName:".profile__info-title",userActivity:".profile__info-activity"}),se=new ee(".profile__avatar"),fe=new H("profile-popup",(function(e){return le.setUserInfo(e),ue.editProfile(e).then((function(){console.log("This:",te),fe.close(),fe._popup.querySelector(".form__submit-button").textContent="Salvar"})).catch((function(e){console.error("Erro ao obter Usrr Info:",e)})),!0})),pe=new H("new-card-popup",(function(e){var t=new L(e).generateCard();return ae.addItem(t),ue.addCard(e).then((function(){console.log("This:",te),pe.close(),pe._popup.querySelector(".form__submit-button").textContent="Salvar"})).catch((function(e){console.error("Erro ao obter Usrr Info:",e)})),!0})),ye=new H("edit-profile-pic-popup",(function(e){return se.setUserProfilePic(e.linkEditProfilePic),ue.editProfilePicture(e).then((function(){console.log("This:",te),ye.close(),ye._popup.querySelector(".form__submit-button").textContent="Salvar"})).catch((function(e){console.error("Erro ao obter Usrr Info:",e)})),!0}));function me(e){"Enter"===e.key&&e.preventDefault()}fe.setEventListeners(),pe.setEventListeners(),ye.setEventListeners(),ne.addEventListener("click",(function(){fe.open();var e=le.getUserInfo();document.querySelector(".form__input_type_name").value=e.name,document.querySelector(".form__input_type_activity").value=e.about})),oe.addEventListener("click",(function(){pe.open()})),ie.addEventListener("click",(function(){ye.open()})),document.querySelector(".form__input_type_name").addEventListener("keydown",me),document.querySelector(".form__input_type_activity").addEventListener("keydown",me),document.querySelector(".form__input_type_title").addEventListener("keydown",me),document.querySelector(".form__input_type_url").addEventListener("keydown",me)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVSLENBM0JBMkcsR0FBYTlFLG9CQUNia0YsR0FBYWxGLG9CQUNib0YsR0FBb0JwRixvQkFFcEJnRSxHQUFXL0ksaUJBQWlCLFNBQVMsV0FFbkM2SixHQUFhL0UsT0FDYixJQUFNMEYsRUFBZWIsR0FBU0QsY0FDOUJySixTQUFTQyxjQUFjLDBCQUEwQlQsTUFBUTJLLEVBQWF2SixLQUN0RVosU0FBU0MsY0FBYyw4QkFBOEJULE1BQVEySyxFQUFhakksS0FDNUUsSUFFQXlHLEdBQVFoSixpQkFBaUIsU0FBUyxXQUVoQ2lLLEdBQWFuRixNQUNmLElBRUFtRSxHQUFxQmpKLGlCQUFpQixTQUFTLFdBRTdDbUssR0FBb0JyRixNQUN0QixJQVNBekUsU0FBU0MsY0FBYywwQkFBMEJOLGlCQUFpQixVQUFXdUssSUFDN0VsSyxTQUFTQyxjQUFjLDhCQUE4Qk4saUJBQWlCLFVBQVd1SyxJQUNqRmxLLFNBQVNDLGNBQWMsMkJBQTJCTixpQkFBaUIsVUFBV3VLLElBQzlFbEssU0FBU0MsY0FBYyx5QkFBeUJOLGlCQUFpQixVQUFXdUssRyIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9jb21wb25lbnRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9jb21wb25lbnRzL1VzZXJQcm9maWxlUGljLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9wYWdlL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xuICB9XG5cbiAgX2hhbmRsZUVzY0Nsb3NlKCkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LmtleSA9PSBcIkVzY2FwZVwiKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XG4gICAgICBpZiAoZXZ0LnRhcmdldCA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLl9wb3B1cFNlbGVjdG9yfWApIHx8IGV2dC50YXJnZXQgPT0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fcG9wdXBTZWxlY3Rvcn1fX2Nsb3NlLWJ1dHRvbmApKSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKCk7XG4gIH1cblxuICBvcGVuKCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuX3BvcHVwU2VsZWN0b3J9YCkuY2xhc3NMaXN0LmFkZChgJHt0aGlzLl9wb3B1cFNlbGVjdG9yfV9vcGVuZWRgKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuX3BvcHVwU2VsZWN0b3J9YCkuY2xhc3NMaXN0LnJlbW92ZShgJHt0aGlzLl9wb3B1cFNlbGVjdG9yfV9vcGVuZWRgKTtcbiAgfVxufSIsImltcG9ydCBQb3B1cCBmcm9tICcuL1BvcHVwLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwc2VsZWN0b3IpIHtcbiAgICBzdXBlcihwb3B1cHNlbGVjdG9yKTtcbiAgfVxuXG4gIC8vIEFycnVtYXJcbiAgb3BlbihuYW1lLCBsaW5rKSB7XG4gICAgc3VwZXIub3BlbigpO1xuICAgIGNvbnN0IGltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbWFnZS1wb3B1cF9fcGljdHVyZVwiKTtcbiAgICBpbWFnZS5zcmMgPSBsaW5rO1xuICAgIGNvbnN0IHRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5pbWFnZS1wb3B1cF9fdGl0bGVcIik7XG4gICAgdGl0bGUudGV4dENvbnRlbnQgPSBuYW1lO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBpIHtcbiAgY29uc3RydWN0b3Ioe2Jhc2VVcmwsIGhlYWRlcnN9KSB7XG4gICAgdGhpcy5iYXNlVXJsID0gYmFzZVVybDtcbiAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xuICB9XG5cbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgbWV0aG9kOiBcIkdFVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMuYXV0aG9yaXphdGlvbixcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkRhZG9zIHJldG9ybmFkb3MgcGVsYSBBUEk6XCIsIGRhdGEpOyAvLyBWZXJpZmlxdWUgbyBxdWUgYSBBUEkgZXN0w6EgcmV0b3JuYW5kb1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH0pO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuaGVhZGVycy5hdXRob3JpemF0aW9uLFxuICAgICAgfVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIGVkaXRQcm9maWxlKHtuYW1lLCBhYm91dH0pIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91c2Vycy9tZWAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogdGhpcy5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgYWJvdXQ6IGFib3V0XG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIGVkaXRQcm9maWxlUGljdHVyZSh7bGlua0VkaXRQcm9maWxlUGljfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L3VzZXJzL21lL2F2YXRhcmAsIHtcbiAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogdGhpcy5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgYXZhdGFyOiBsaW5rRWRpdFByb2ZpbGVQaWMsXG4gICAgICB9KVxuICAgIH0pXG4gICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLm9rKSB7XG4gICAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgfVxuXG4gIGFkZENhcmQoe25hbWUsIGxpbmt9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2FyZHNgLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLmhlYWRlcnMuYXV0aG9yaXphdGlvbixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogdGhpcy5oZWFkZXJzW1wiQ29udGVudC1UeXBlXCJdLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgbGluazogbGlua1xuICAgICAgfSlcbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cblxuICBkZWxldGVDYXJkKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIC8vIFwiQ29udGVudC1UeXBlXCI6IHRoaXMuaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXSxcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cblxuICBhZGRMaWtlKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIC8vIFwiQ29udGVudC1UeXBlXCI6IHRoaXMuaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXSxcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cblxuICByZW1vdmVMaWtlKGNhcmRJZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcbiAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5oZWFkZXJzLmF1dGhvcml6YXRpb24sXG4gICAgICAgIC8vIFwiQ29udGVudC1UeXBlXCI6IHRoaXMuaGVhZGVyc1tcIkNvbnRlbnQtVHlwZVwiXSxcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgaWYgKHJlcy5vaykge1xuICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gIH1cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSAnLi9Qb3B1cC5qcyc7XG5pbXBvcnQgQXBpIGZyb20gJy4vQXBpLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtwb3B1cFNlbGVjdG9yfWApO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoY2FyZElkKSB7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuX3BvcHVwU2VsZWN0b3J9YCkgfHwgZXZ0LnRhcmdldCA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLl9wb3B1cFNlbGVjdG9yfV9fY2xvc2UtYnV0dG9uYCkpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQua2V5ID09IFwiRXNjYXBlXCIpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xuICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICBjb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgICAgICAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL3dlYi1wdGJyLWNvaG9ydC0xM1wiLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgYXV0aG9yaXphdGlvbjogXCI0ZmU1ZmIxYS05YTQyLTQ2MzEtOWY3ZS0zOWViNDk5NTFhMGZcIixcbiAgICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2coXCJDYXJkSWQ6IFwiLCBjYXJkSWQpO1xuXG4gICAgICBjb25zb2xlLmxvZyhcIkNhcmRJZDogXCIsIGNhcmRJZCk7XG4gICAgICBhcGkuZGVsZXRlQ2FyZChjYXJkSWQpXG4gICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQodHJ1ZSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gb2J0ZXIgY2FydMO1ZXMgaW5pY2lhaXM6XCIsIGVycik7XG4gICAgICAgIH0pO1xuXG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfSk7XG4gIH1cblxufVxuXG5cbi8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm1hdGlvbiBleHRlbmRzIFBvcHVwIHtcbi8vICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuLy8gICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xuLy8gICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7cG9wdXBTZWxlY3Rvcn1gKTtcblxuLy8gICAgIC8vIEFkaWNpb25hIHVtYSBwcm9wcmllZGFkZSBwYXJhIGFybWF6ZW5hciBhcyBmdW7Dp8O1ZXMgZGUgZXZlbnQgbGlzdGVuZXJcbi8vICAgICB0aGlzLl9oYW5kbGVDbGljayA9IHRoaXMuX2hhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4vLyAgICAgdGhpcy5faGFuZGxlS2V5RG93biA9IHRoaXMuX2hhbmRsZUtleURvd24uYmluZCh0aGlzKTtcbi8vICAgfVxuXG4vLyAgIF9oYW5kbGVDbGljayhldnQpIHtcbi8vICAgICBpZiAoZXZ0LnRhcmdldCA9PT0gdGhpcy5fcG9wdXAgfHwgZXZ0LnRhcmdldCA9PT0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fcG9wdXBTZWxlY3Rvcn1fX2Nsb3NlLWJ1dHRvbmApKSB7XG4vLyAgICAgICB0aGlzLmNsb3NlKCk7XG4vLyAgICAgfVxuLy8gICB9XG5cbi8vICAgX2hhbmRsZUtleURvd24oZXZ0KSB7XG4vLyAgICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbi8vICAgICAgIHRoaXMuY2xvc2UoKTtcbi8vICAgICB9XG4vLyAgIH1cblxuLy8gICBzZXRFdmVudExpc3RlbmVycyhldmVudG8pIHtcbi8vICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZUNsaWNrKTtcbi8vICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlS2V5RG93bik7XG5cbi8vICAgICBjb25zdCBzdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4vLyAgICAgc3VibWl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xuLy8gICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG5cbi8vICAgICAgIGV2ZW50by5yZW1vdmUoKTtcblxuLy8gICAgICAgc3VwZXIuY2xvc2UoKTtcbi8vICAgICB9KTtcbi8vICAgfVxuXG4vLyAgIGNsb3NlKCkge1xuLy8gICAgICAgLy8gUmVtb3ZlIG9zIGV2ZW50IGxpc3RlbmVyc1xuLy8gICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlQ2xpY2spO1xuLy8gICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVLZXlEb3duKTtcblxuLy8gICAgIHN1cGVyLmNsb3NlKCk7IC8vIENoYW1hIG8gbcOpdG9kbyBvcmlnaW5hbCBgY2xvc2VgIGRhIGNsYXNzZSBgUG9wdXBgXG5cbi8vICAgICAvLyBSZW1vdmUgbyBwb3B1cCBkbyBET00gKG9wY2lvbmFsLCBzZSBuZWNlc3PDoXJpbylcblxuLy8gICAgIC8vIEV4Y2x1aSBhIGluc3TDom5jaWEgZG8gcG9wdXAgKG9wY2lvbmFsKVxuLy8gICAgIGRlbGV0ZSB0aGlzLl9wb3B1cDtcbi8vICAgfVxuLy8gfVxuIiwiaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4vUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tICcuL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qcyc7XG5pbXBvcnQgQXBpIGZyb20gJy4vQXBpLmpzJztcblxuLy8gY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudFwiKTtcblxuZXhwb3J0IGNsYXNzIENhcmQge1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcbiAgICB0aGlzLl9saW5rID0gZGF0YS5saW5rO1xuICAgIHRoaXMuX2lkID0gZGF0YS5faWQ7XG4gICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIC8vIHRoaXMuX251bWJlck9mTGlrZXMgPSBkYXRhLmxpa2VzLmxlbmd0aCA/IGRhdGEubGlrZXMubGVuZ3RoIDogMDtcbiAgICB0aGlzLl9udW1iZXJPZkxpa2VzID0gQXJyYXkuaXNBcnJheShkYXRhLmxpa2VzKSA/IGRhdGEubGlrZXMubGVuZ3RoIDogMDtcbiAgICB0aGlzLl9pc0xpa2VkID0gdGhpcy5fbnVtYmVyT2ZMaWtlcyA+IDAgPyB0cnVlIDogZmFsc2U7XG4gIH1cblxuICBfZ2V0VGVtcGxhdGUoKSB7XG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKVxuICAgICAgLmNvbnRlbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIilcbiAgICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgICByZXR1cm4gY2FyZEVsZW1lbnQ7XG4gIH1cblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG5cbiAgICBjb25zdCBhcGkgPSBuZXcgQXBpKHtcbiAgICAgIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQubm9tb3JlcGFydGllcy5jby92MS93ZWItcHRici1jb2hvcnQtMTNcIixcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCI0ZmU1ZmIxYS05YTQyLTQ2MzEtOWY3ZS0zOWViNDk5NTFhMGZcIixcbiAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190YWctbGlrZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2dCkgPT4ge1xuXG4gICAgICBpZihldnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcImNhcmRfX3RhZy1saWtlX2xpa2VkXCIpKSB7XG4gICAgICAgIGV2dC50YXJnZXQuY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX3RhZy1saWtlX2xpa2VkXCIpO1xuICAgICAgICBhcGkucmVtb3ZlTGlrZSh0aGlzLl9pZClcbiAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3VsdGFkb1JlbUxpa2VzOlwiLCByZXN1bHQpO1xuICAgICAgICAgICAgdGhpcy5fbGlrZXMgPSByZXN1bHQubGlrZXM7XG4gICAgICAgICAgICB0aGlzLl9udW1iZXJPZkxpa2VzID0gQXJyYXkuaXNBcnJheShyZXN1bHQubGlrZXMpID8gcmVzdWx0Lmxpa2VzLmxlbmd0aCA6IDA7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIlJlc3VsdCBhZnRlciB1cGRhdGU6IFwiLCB0aGlzLl9udW1iZXJPZkxpa2VzKTtcbiAgICAgICAgICAgIGxvY2F0aW9uLnJlbG9hZCh0cnVlKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBvYnRlciBjYXJ0w7VlcyBpbmljaWFpczpcIiwgZXJyKTtcbiAgICAgICAgICB9KTtcblxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fdGFnLWxpa2VfbGlrZWRcIik7XG4gICAgICAgIGFwaS5hZGRMaWtlKHRoaXMuX2lkKVxuICAgICAgICAgIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVzdWx0YWRvQWRkTGlrZXM6XCIsIHJlc3VsdCk7XG4gICAgICAgICAgICB0aGlzLl9saWtlcyA9IHJlc3VsdC5saWtlcztcbiAgICAgICAgICAgIHRoaXMuX251bWJlck9mTGlrZXMgPSBBcnJheS5pc0FycmF5KHJlc3VsdC5saWtlcykgPyByZXN1bHQubGlrZXMubGVuZ3RoIDogMDtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmVzdWx0IGFmdGVyIHVwZGF0ZTogXCIsIHRoaXMuX251bWJlck9mTGlrZXMpO1xuICAgICAgICAgICAgbG9jYXRpb24ucmVsb2FkKHRydWUpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvIGFvIG9idGVyIGNhcnTDtWVzIGluaWNpYWlzOlwiLCBlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgfSk7XG5cbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2UtbGlua1wiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgdGhpcy5oYW5kbGVDYXJkQ2xpY2soKTtcbiAgICB9KTtcblxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICBjb25zdCBwb3B1cENvbmYgPSBuZXcgUG9wdXBXaXRoQ29uZmlybWF0aW9uKFwiZGVsZXRlLXBvcHVwXCIpO1xuICAgICAgcG9wdXBDb25mLm9wZW4oKTtcbiAgICAgIGNvbnNvbGUubG9nKFwiVGhpc0lkOiBcIiwgdGhpcy5faWQpO1xuICAgICAgcG9wdXBDb25mLnNldEV2ZW50TGlzdGVuZXJzKHRoaXMuX2lkKTtcbiAgICB9KTtcbiAgfVxuXG4gIGdlbmVyYXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZ2V0VGVtcGxhdGUoKTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuXG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RhZy10aXRsZVwiKS50ZXh0Q29udGVudCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpLnNyYyA9IHRoaXMuX2xpbms7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RhZy1saWtlLWNvdW50XCIpLnRleHRDb250ZW50ID0gdGhpcy5fbnVtYmVyT2ZMaWtlcztcbiAgICBpZih0aGlzLl9udW1iZXJPZkxpa2VzID4gMCkge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RhZy1saWtlXCIpLmNsYXNzTGlzdC5hZGQoXCJjYXJkX190YWctbGlrZV9saWtlZFwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RhZy1saWtlXCIpLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX190YWctbGlrZV9saWtlZFwiKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgfVxuXG4gIGhhbmRsZUNhcmRDbGljaygpIHtcbiAgICBjb25zdCBpbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKFwiaW1hZ2UtcG9wdXBcIik7XG4gICAgaW1hZ2VQb3B1cC5vcGVuKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xuICAgIGltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgfVxuXG4gIC8vIHJlbG9hZExpa2VzKCkge1xuICAvLyAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190YWctbGlrZS1jb3VudFwiKS50ZXh0Q29udGVudCA9IHRoaXMuX251bWJlck9mTGlrZXM7XG4gIC8vIH1cblxuICAvLyBhZGRMaWtlKCkge1xuICAvLyAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190YWctbGlrZS1jb3VudFwiKS50ZXh0Q29udGVudCA9IHRoaXMuX251bWJlck9mTGlrZXMgKyAxO1xuICAvLyB9XG5cbiAgLy8gcmVtb3ZlTGlrZSgpIHtcblxuICAvLyAgIGlmKHRoaXMuX251bWJlck9mTGlrZXMgPD0gMCkge1xuICAvLyAgICAgcmV0dXJuXG4gIC8vICAgfSBlbHNlIGlmKHRoaXMuX251bWJlck9mTGlrZXMgPiAwKSB7XG4gIC8vICAgICB0aGlzLl9udW1iZXJPZkxpa2VzIC09IDE7XG4gIC8vICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fdGFnLWxpa2UtY291bnRcIikudGV4dENvbnRlbnQgPSB0aGlzLl9udW1iZXJPZkxpa2VzO1xuICAvLyAgIH1cbiAgLy8gfVxufSIsImV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBmb3JtRWxlbWVudCkge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLl9mb3JtRWxlbWVudCA9IGZvcm1FbGVtZW50O1xuICB9XG5cbiAgX3Nob3dJbnB1dEVycm9yID0gKGlucHV0RWxlbWVudCwgZXJyb3JNZXNzYWdlKSA9PiB7XG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IGVycm9yTWVzc2FnZTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gIH07XG5cbiAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcbiAgfTtcblxuICBfY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGlucHV0RWxlbWVudCkgPT4ge1xuICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9O1xuXG4gIF9oYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRMaXN0KSA9PiB7XG4gICAgcmV0dXJuIGlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+ICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpfTtcblxuICBfdG9nZ2xlQnV0dG9uU3RhdGUgPSAoaW5wdXRMaXN0LCBidXR0b25FbGVtZW50KSA9PiB7XG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dChpbnB1dExpc3QpKSB7XG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICBidXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH1cbiAgfTtcblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMgPSAoKSA9PiB7XG4gICAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2NvbmZpZy5pbnB1dFNlbGVjdG9yKSk7XG4gICAgY29uc3QgYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG5cbiAgICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCk7XG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uID0gKCkgPT4ge1xuXG4gICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIC8vIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKGlucHV0TGlzdCwgYnV0dG9uRWxlbWVudCk7XG4gICAgfSk7XG5cbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xuICB9O1xuXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fcG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtwb3B1cFNlbGVjdG9yfWApO1xuICB9XG5cbiAgY2xvc2UoKSB7XG4gICAgaWYodGhpcy5fcG9wdXBTZWxlY3RvciA9PSBcIm5ldy1jYXJkLXBvcHVwXCIpIHtcbiAgICAgIGNvbnN0IGZvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XG4gICAgICBmb3JtLnJlc2V0KCk7XG4gICAgfVxuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7dGhpcy5fcG9wdXBTZWxlY3Rvcn1gKS5jbGFzc0xpc3QucmVtb3ZlKGAke3RoaXMuX3BvcHVwU2VsZWN0b3J9X29wZW5lZGApO1xuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQudGFyZ2V0ID09IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke3RoaXMuX3BvcHVwU2VsZWN0b3J9YCkgfHwgZXZ0LnRhcmdldCA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHt0aGlzLl9wb3B1cFNlbGVjdG9yfV9fY2xvc2UtYnV0dG9uYCkpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIChldnQpID0+IHtcbiAgICAgIGlmIChldnQua2V5ID09IFwiRXNjYXBlXCIpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3Qgc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xuICAgIHN1Ym1pdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldnQpID0+IHtcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX3N1Ym1pdC1idXR0b25cIikudGV4dENvbnRlbnQgPSBcIlNhbHZhbmRvLi4uXCI7XG5cbiAgICAgIGNvbnN0IHdvcmtlZCA9IHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG5cbiAgICB9KTtcbiAgfVxuXG4gIF9nZXRJbnB1dFZhbHVlcygpIHtcblxuICAgIGNvbnN0IGlucHV0cyA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZm9ybV9faW5wdXRcIik7XG5cbiAgICBjb25zdCB2YWx1ZXMgPSB7fTtcblxuICAgIGlucHV0cy5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgIHZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHZhbHVlcztcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xuICBjb25zdHJ1Y3Rvcih7aXRlbXMsIHJlbmRlcmVyfSwgY29udGFpbmVyU2VsZWN0b3IpIHtcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcbiAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgfVxuXG4gIGFkZEl0ZW0oZWxlbWVudCkge1xuICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGVsZW1lbnQpO1xuICB9XG5cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fY29udGFpbmVyLmlubmVySFRNTCA9IFwiXCI7XG4gIH1cblxuICByZW5kZXJlcigpIHtcbiAgICB0aGlzLmNsZWFyKCk7XG5cbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcbiAgICB9KTtcbiAgfVxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcbiAgY29uc3RydWN0b3Ioe3VzZXJOYW1lLCB1c2VyQWN0aXZpdHl9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJOYW1lKTtcbiAgICB0aGlzLl91c2VyQWN0aXZpdHkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBY3Rpdml0eSk7XG4gIH1cblxuICBnZXRVc2VySW5mbygpIHtcblxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCxcbiAgICAgIGFib3V0OiB0aGlzLl91c2VyQWN0aXZpdHkudGV4dENvbnRlbnRcbiAgICB9O1xuICB9XG5cbiAgc2V0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHRoaXMuX3VzZXJBY3Rpdml0eS50ZXh0Q29udGVudCA9IGFib3V0O1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlclByb2ZpbGVQaWMge1xuICBjb25zdHJ1Y3Rvcihwcm9maWxlUGljTGluaykge1xuICAgIHRoaXMuX3Byb2ZpbGVQaWNMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlUGljTGluayk7XG4gIH1cblxuICBnZXRVc2VyUHJvZmlsZVBpYygpIHtcblxuICAgIHJldHVybiB0aGlzLl9wcm9maWxlUGljTGluay5zcmM7XG4gIH1cblxuICBzZXRVc2VyUHJvZmlsZVBpYyhwcm9maWxlUGljTmV3TGluaykge1xuICAgIGNvbnNvbGUubG9nKHRoaXMuX3Byb2ZpbGVQaWNMaW5rLnNyYyk7XG4gICAgdGhpcy5fcHJvZmlsZVBpY0xpbmsuc3JjID0gcHJvZmlsZVBpY05ld0xpbms7XG4gIH1cbn0iLCJpbXBvcnQge0NhcmR9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL0NhcmQuanNcIjtcbmltcG9ydCB7Rm9ybVZhbGlkYXRvcn0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xuaW1wb3J0IFBvcHVwV2l0aEZvcm0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU2VjdGlvbi5qcyc7XG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5pbXBvcnQgVXNlclByb2ZpbGVQaWMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Vc2VyUHJvZmlsZVBpYy5qcyc7XG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IEFwaSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9BcGkuanNcIjtcblxuY29uc3QgY29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY29udGVudFwiKTtcbmNvbnN0IGVkaXRCdXR0b24gPSBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9faW5mby1lZGl0LWJ1dHRvblwiKTtcbmV4cG9ydCBjb25zdCBwb3B1cCA9IGNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlLXBvcHVwXCIpO1xuY29uc3QgbmV3Q2FyZCA9IGNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xuY29uc3QgZWxlbWVudHMgPSBcIi5lbGVtZW50c1wiO1xuY29uc3QgZWRpdFByb2ZpbGVQaWNCdXR0b24gPSBjb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyX2J1dHRvblwiKTtcblxuXG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXG4gIHtcbiAgICBuYW1lOiBcIlZhbGUgZGUgWW9zZW1pdGVcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfeW9zZW1pdGUuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGFnbyBMb3Vpc2VcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfbGFrZS1sb3Vpc2UuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTW9udGFuaGFzIENhcmVjYXNcIixcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vd2ViLWNvZGUvbW92ZWRfYmFsZC1tb3VudGFpbnMuanBnXCJcbiAgfSxcbiAge1xuICAgIG5hbWU6IFwiTGF0ZW1hclwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF9sYXRlbWFyLmpwZ1wiXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIlBhcnF1ZSBOYWNpb25hbCBkYSBWYW5vaXNlIFwiLFxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS93ZWItY29kZS9tb3ZlZF92YW5vaXNlLmpwZ1wiXG4gIH0sXG4gIHtcbiAgICBuYW1lOiBcIkxhZ28gZGkgQnJhaWVzXCIsXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3dlYi1jb2RlL21vdmVkX2xhZ28uanBnXCJcbiAgfVxuXTtcblxuY29uc3QgZm9ybUNvbmZpZyA9IHtcbiAgZm9ybVNlbGVjdG9yOiAnLmZvcm0nLFxuICBpbnB1dFNlbGVjdG9yOiAnLmZvcm1fX2lucHV0JyxcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6ICcuZm9ybV9fc3VibWl0LWJ1dHRvbicsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6ICdmb3JtX19zdWJtaXQtYnV0dG9uX2luYWN0aXZlJyxcbiAgZXJyb3JDbGFzczogJ2Zvcm1fX2lucHV0LWVycm9yX2FjdGl2ZSdcbn07XG5cbmNvbnN0IGZvcm1MaXN0ID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1cIikpO1xuXG5mb3JtTGlzdC5mb3JFYWNoKChpdGVtKSA9PiB7XG4gIGNvbnN0IGZvcm0gPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtQ29uZmlnLCBpdGVtKTtcbiAgZm9ybS5lbmFibGVWYWxpZGF0aW9uKCk7XG59KTtcblxuY29uc3QgQ2FydG9lcyA9IG5ldyBTZWN0aW9uKHsgaXRlbXM6IGluaXRpYWxDYXJkcywgcmVuZGVyZXI6IChpdGVtKSA9PiB7XG5cbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGl0ZW0pO1xuICBjb25zdCBjYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XG4gIENhcnRvZXMuYWRkSXRlbShjYXJkRWxlbWVudCk7XG5cbn0gfSwgZWxlbWVudHMpO1xuXG4vLyBDYXJ0b2VzLnJlbmRlcmVyKCk7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLm5vbW9yZXBhcnRpZXMuY28vdjEvd2ViLXB0YnItY29ob3J0LTEzXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcIjRmZTVmYjFhLTlhNDItNDYzMS05ZjdlLTM5ZWI0OTk1MWEwZlwiLFxuICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiXG4gIH1cbn0pO1xuXG5hcGkuZ2V0SW5pdGlhbENhcmRzKClcbiAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKFwiUmVzdWx0YWRvczpcIiwgcmVzdWx0KTtcbiAgICByZXN1bHQuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChpdGVtKTtcbiAgICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcbiAgICAgIENhcnRvZXMuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gICAgfSlcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBvYnRlciBjYXJ0w7VlcyBpbmljaWFpczpcIiwgZXJyKTtcbiAgfSk7XG5cbmFwaS5nZXRVc2VySW5mbygpXG4gIC50aGVuKChyZXN1bHQpID0+IHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2luZm8tdGl0bGVcIikudGV4dENvbnRlbnQgPSByZXN1bHQubmFtZTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2luZm8tYWN0aXZpdHlcIikudGV4dENvbnRlbnQgPSByZXN1bHQuYWJvdXQ7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hdmF0YXJcIikuc3JjID0gcmVzdWx0LmF2YXRhcjtcbiAgfSlcbiAgLmNhdGNoKChlcnIpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBvYnRlciBVc3JyIEluZm86XCIsIGVycik7XG4gIH0pO1xuXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7dXNlck5hbWU6ICcucHJvZmlsZV9faW5mby10aXRsZScsIHVzZXJBY3Rpdml0eTogJy5wcm9maWxlX19pbmZvLWFjdGl2aXR5J30pO1xuY29uc3QgdXNlclByb2ZpbGVQaWNJbmZvID0gbmV3IFVzZXJQcm9maWxlUGljKCcucHJvZmlsZV9fYXZhdGFyJyk7XG5cbmNvbnN0IHByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwicHJvZmlsZS1wb3B1cFwiLCAoaW5wdXRWYWx1ZXMpID0+IHtcblxuICB1c2VySW5mby5zZXRVc2VySW5mbyhpbnB1dFZhbHVlcyk7XG4gIGFwaS5lZGl0UHJvZmlsZShpbnB1dFZhbHVlcylcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIlRoaXM6XCIsIHRoaXMpO1xuICAgICAgcHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgICBwcm9maWxlUG9wdXAuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9fc3VibWl0LWJ1dHRvblwiKS50ZXh0Q29udGVudCA9IFwiU2FsdmFyXCI7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgY29uc29sZS5lcnJvcihcIkVycm8gYW8gb2J0ZXIgVXNyciBJbmZvOlwiLCBlcnIpO1xuICAgIH0pO1xuXG4gIHJldHVybiB0cnVlO1xufSk7XG5cbmNvbnN0IG5ld0NhcmRQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwibmV3LWNhcmQtcG9wdXBcIiwgKGlucHV0VmFsdWVzKSA9PiB7XG5cbiAgY29uc3QgY2FyZCA9IG5ldyBDYXJkKGlucHV0VmFsdWVzKTtcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xuXG4gIENhcnRvZXMuYWRkSXRlbShjYXJkRWxlbWVudCk7XG4gIGFwaS5hZGRDYXJkKGlucHV0VmFsdWVzKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiVGhpczpcIiwgdGhpcyk7XG4gICAgICBuZXdDYXJkUG9wdXAuY2xvc2UoKTtcbiAgICAgIG5ld0NhcmRQb3B1cC5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIpLnRleHRDb250ZW50ID0gXCJTYWx2YXJcIjtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBvYnRlciBVc3JyIEluZm86XCIsIGVycik7XG4gICAgfSk7XG5cbiAgcmV0dXJuIHRydWU7XG59KTtcblxuY29uc3QgZWRpdFByb2ZpbGVQaWNQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiZWRpdC1wcm9maWxlLXBpYy1wb3B1cFwiLCAoaW5wdXRWYWx1ZSkgPT4ge1xuXG4gIHVzZXJQcm9maWxlUGljSW5mby5zZXRVc2VyUHJvZmlsZVBpYyhpbnB1dFZhbHVlLmxpbmtFZGl0UHJvZmlsZVBpYyk7XG4gIGFwaS5lZGl0UHJvZmlsZVBpY3R1cmUoaW5wdXRWYWx1ZSlcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhcIlRoaXM6XCIsIHRoaXMpO1xuICAgICAgZWRpdFByb2ZpbGVQaWNQb3B1cC5jbG9zZSgpO1xuICAgICAgZWRpdFByb2ZpbGVQaWNQb3B1cC5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtX19zdWJtaXQtYnV0dG9uXCIpLnRleHRDb250ZW50ID0gXCJTYWx2YXJcIjtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJybyBhbyBvYnRlciBVc3JyIEluZm86XCIsIGVycik7XG4gICAgfSk7XG5cbiAgcmV0dXJuIHRydWU7XG59KTtcblxucHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5uZXdDYXJkUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmVkaXRQcm9maWxlUGljUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblxuICBwcm9maWxlUG9wdXAub3BlbigpO1xuICBjb25zdCBub3Zvc1ZhbG9yZXMgPSB1c2VySW5mby5nZXRVc2VySW5mbygpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfbmFtZVwiKS52YWx1ZSA9IG5vdm9zVmFsb3Jlcy5uYW1lO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfYWN0aXZpdHlcIikudmFsdWUgPSBub3Zvc1ZhbG9yZXMuYWJvdXQ7XG59KTtcblxubmV3Q2FyZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcblxuICBuZXdDYXJkUG9wdXAub3BlbigpO1xufSk7XG5cbmVkaXRQcm9maWxlUGljQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuXG4gIGVkaXRQcm9maWxlUGljUG9wdXAub3BlbigpO1xufSk7XG5cbmZ1bmN0aW9uIHByZXNzZWRFbnRlcihldnQpIHtcblxuICBpZiAoZXZ0LmtleSA9PT0gXCJFbnRlclwiKSB7XG4gICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIH1cbn1cblxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX19pbnB1dF90eXBlX25hbWVcIikuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgcHJlc3NlZEVudGVyKTtcbmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9faW5wdXRfdHlwZV9hY3Rpdml0eVwiKS5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBwcmVzc2VkRW50ZXIpO1xuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX19pbnB1dF90eXBlX3RpdGxlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHByZXNzZWRFbnRlcik7XG5kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfdXJsXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHByZXNzZWRFbnRlcik7XG4iXSwibmFtZXMiOlsiUG9wdXAiLCJwb3B1cFNlbGVjdG9yIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsIl9wb3B1cFNlbGVjdG9yIiwia2V5IiwidmFsdWUiLCJfdGhpcyIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJldnQiLCJjbG9zZSIsIl90aGlzMiIsInRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImNvbmNhdCIsIl9oYW5kbGVFc2NDbG9zZSIsImNsYXNzTGlzdCIsImFkZCIsInJlbW92ZSIsIlBvcHVwV2l0aEltYWdlIiwiX1BvcHVwIiwicG9wdXBzZWxlY3RvciIsIl9jYWxsU3VwZXIiLCJfaW5oZXJpdHMiLCJuYW1lIiwibGluayIsInNyYyIsInRleHRDb250ZW50IiwiQXBpIiwiX3JlZiIsImJhc2VVcmwiLCJoZWFkZXJzIiwiZmV0Y2giLCJtZXRob2QiLCJhdXRob3JpemF0aW9uIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJkYXRhIiwiY29uc29sZSIsImxvZyIsIl9yZWYyIiwiYWJvdXQiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIl9yZWYzIiwibGlua0VkaXRQcm9maWxlUGljIiwiYXZhdGFyIiwiX3JlZjQiLCJjYXJkSWQiLCJQb3B1cFdpdGhDb25maXJtYXRpb24iLCJfcG9wdXAiLCJwcmV2ZW50RGVmYXVsdCIsImFwaSIsImRlbGV0ZUNhcmQiLCJsb2NhdGlvbiIsInJlbG9hZCIsImNhdGNoIiwiZXJyIiwiZXJyb3IiLCJDYXJkIiwiX25hbWUiLCJfbGluayIsIl9pZCIsIl9saWtlcyIsImxpa2VzIiwiX251bWJlck9mTGlrZXMiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJfaXNMaWtlZCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJfZWxlbWVudCIsImNvbnRhaW5zIiwicmVtb3ZlTGlrZSIsInJlc3VsdCIsImFkZExpa2UiLCJoYW5kbGVDYXJkQ2xpY2siLCJwb3B1cENvbmYiLCJvcGVuIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJfZ2V0VGVtcGxhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJhbHQiLCJpbWFnZVBvcHVwIiwiRm9ybVZhbGlkYXRvciIsIl9jcmVhdGVDbGFzcyIsImNvbmZpZyIsImZvcm1FbGVtZW50IiwiX2RlZmluZVByb3BlcnR5IiwiaW5wdXRFbGVtZW50IiwiZXJyb3JNZXNzYWdlIiwiZXJyb3JFbGVtZW50IiwiX2Zvcm1FbGVtZW50IiwiaWQiLCJfY29uZmlnIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImlucHV0TGlzdCIsInNvbWUiLCJidXR0b25FbGVtZW50IiwiX2hhc0ludmFsaWRJbnB1dCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl90b2dnbGVCdXR0b25TdGF0ZSIsImZvckVhY2giLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsInJlc2V0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRzIiwidmFsdWVzIiwiaW5wdXQiLCJTZWN0aW9uIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX3JlbmRlcmVkSXRlbXMiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiZWxlbWVudCIsInByZXBlbmQiLCJpbm5lckhUTUwiLCJjbGVhciIsIml0ZW0iLCJVc2VySW5mbyIsInVzZXJOYW1lIiwidXNlckFjdGl2aXR5IiwiX3VzZXJOYW1lIiwiX3VzZXJBY3Rpdml0eSIsIlVzZXJQcm9maWxlUGljIiwicHJvZmlsZVBpY0xpbmsiLCJfcHJvZmlsZVBpY0xpbmsiLCJwcm9maWxlUGljTmV3TGluayIsImVkaXRCdXR0b24iLCJuZXdDYXJkIiwiZWRpdFByb2ZpbGVQaWNCdXR0b24iLCJmb3JtQ29uZmlnIiwiZm9ybVNlbGVjdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsIkNhcnRvZXMiLCJjYXJkRWxlbWVudCIsImdlbmVyYXRlQ2FyZCIsImFkZEl0ZW0iLCJnZXRJbml0aWFsQ2FyZHMiLCJnZXRVc2VySW5mbyIsInVzZXJJbmZvIiwidXNlclByb2ZpbGVQaWNJbmZvIiwicHJvZmlsZVBvcHVwIiwiaW5wdXRWYWx1ZXMiLCJzZXRVc2VySW5mbyIsImVkaXRQcm9maWxlIiwibmV3Q2FyZFBvcHVwIiwiYWRkQ2FyZCIsImVkaXRQcm9maWxlUGljUG9wdXAiLCJpbnB1dFZhbHVlIiwic2V0VXNlclByb2ZpbGVQaWMiLCJlZGl0UHJvZmlsZVBpY3R1cmUiLCJwcmVzc2VkRW50ZXIiLCJub3Zvc1ZhbG9yZXMiXSwic291cmNlUm9vdCI6IiJ9